name: Publish Docker Images

on:
  release:
    types: [published]

jobs:
  docker:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Prepare environment file
        run: cp example.env .env

      - name: Extract version and prerelease status
        id: release_info
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "IS_PRERELEASE=${{ github.event.release.prerelease }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          echo "Docker Hub login successful."

      - name: Build Docker Images
        run: |
          echo "Building Docker images..."
          docker compose -f docker-compose-prod.yml build
          echo "Docker images built successfully."

      - name: Publish Docker Images
        env:
          BACKEND_NAME: lenorefin_backend
          FRONTEND_NAME: lenorefin_frontend
          WORKER_NAME: lenorefin_worker
          VERSION: ${{ env.VERSION }}
          IS_PRERELEASE: ${{ env.IS_PRERELEASE }}
          DOCKER_HUB_REPO: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "Publishing Docker images to $DOCKER_HUB_REPO..."

          # Tag new images with the release version
          docker tag $BACKEND_NAME:production $DOCKER_HUB_REPO/$BACKEND_NAME:${VERSION}
          docker tag $FRONTEND_NAME:production $DOCKER_HUB_REPO/$FRONTEND_NAME:${VERSION}
          docker tag $WORKER_NAME:production $DOCKER_HUB_REPO/$WORKER_NAME:${VERSION}

          # Push versioned tags
          docker push $DOCKER_HUB_REPO/$BACKEND_NAME:${VERSION}
          docker push $DOCKER_HUB_REPO/$FRONTEND_NAME:${VERSION}
          docker push $DOCKER_HUB_REPO/$WORKER_NAME:${VERSION}

          # If it's NOT a prerelease, update and push 'latest' tags
          if [ "$IS_PRERELEASE" = "false" ]; then
            echo "Final release detected, tagging as latest..."
            docker tag $BACKEND_NAME:production $DOCKER_HUB_REPO/$BACKEND_NAME:latest
            docker tag $FRONTEND_NAME:production $DOCKER_HUB_REPO/$FRONTEND_NAME:latest
            docker tag $WORKER_NAME:production $DOCKER_HUB_REPO/$WORKER_NAME:latest

            docker push $DOCKER_HUB_REPO/$BACKEND_NAME:latest
            docker push $DOCKER_HUB_REPO/$FRONTEND_NAME:latest
            docker push $DOCKER_HUB_REPO/$WORKER_NAME:latest
          else
            echo "Prerelease detected, skipping latest tag."
          fi

          echo "Published Docker images for version ${VERSION}."
