name: Release Please Final + Docker Build + Tagging

on:
  push:
    branches:
      - release/v*

permissions:
  contents: write
  pull-requests: write
  issues: write 

jobs:
  release:
    runs-on: self-hosted
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple
          prerelease: true
          prerelease-type: "rc"

  build-and-push:
    needs: release
    if: needs.release.outputs.release_created == 'true'
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version from release
        run: echo "VERSION=${{ needs.release.outputs.version }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD}}

      - name: Build Docker Images
        run: |
          echo "Building Docker images..."
          docker compose -f docker-compose-prod.yml build
          echo "Docker images built successfully."

      - name: Publish Docker Images
        env:
          BACKEND_NAME: lenorefin_backend
          FRONTEND_NAME: lenorefin_frontend
          WORKER_NAME: lenorefin_worker
          DOCKER_HUB_REPO: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "Publishing Docker images to $DOCKER_HUB_REPO..."

          # Tag new images with the release version
          docker tag $BACKEND_NAME:production $DOCKER_HUB_REPO/$BACKEND_NAME:${VERSION}
          docker tag $FRONTEND_NAME:production $DOCKER_HUB_REPO/$FRONTEND_NAME:${VERSION}
          docker tag $WORKER_NAME:production $DOCKER_HUB_REPO/$WORKER_NAME:${VERSION}

          # Push versioned tags
          docker push $DOCKER_HUB_REPO/$BACKEND_NAME:${VERSION}
          docker push $DOCKER_HUB_REPO/$FRONTEND_NAME:${VERSION}
          docker push $DOCKER_HUB_REPO/$WORKER_NAME:${VERSION}

          echo "Published Docker images for version ${VERSION}."
